import loader from"@assemblyscript/loader";async function wasm_init(e,l,c,o){var r=()=>new Promise((s,n)=>{const t=new Worker(`${o??""}/assets/web-worker/wasm/worker.js`),a=(t.postMessage(JSON.stringify(e)),async e=>{t.removeEventListener("message",a);let o;var r={...l?{env:{memory:l}}:{},console:{"console.log":e=>{o&&console.log(o.__getString(e))},"console.logi":e=>{console.log(e)},"console.logf":e=>{console.log(e)},"console.logj":e=>{try{o&&console.log(JSON.parse(o.__getString(e)))}catch(e){console.error(e)}}},...c};try{o=(await loader.instantiate(e.data[1],r)).exports,s(o)}catch(e){console.error(e),n()}});t.addEventListener("message",a)});return Array.isArray(e)?Promise.all(e.map(r)):r()}export{wasm_init};